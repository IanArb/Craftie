name: iOS PR CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2 # omit if .ruby-version file exists in project, or replace with your teamâ€™s supported ruby version
          bundler-cache: true
      - name: Bundle Install
        run: |
          cd iosApp
          bundle install
      - name: Setup secrets.json
        run: |
          echo '
            {
              "username": "${{ secrets.USERNAME }}"
              "password": "${{ secrets.PASSWORD }}"
            }
          ' >> iosApp/iosApp/Secrets/secrets.json
      - name: Install Firebase
        run: |
          curl -sL https://firebase.tools | bash
      - name: Login with Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run:
          firebase login --token ${{ secrets.FIREBASE_TOKEN }} --interactive
      - name: Build and upload to Firebase App Distribution
        env:
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER_IOS }}
          TEAM_NAME: ${{ secrets.TEAM_NAME_IOS }}
          FIREBASE_TESTER_GROUP: craftie-team
        run: |
          cd iosApp
          bundle exec fastlane do_everything_dev