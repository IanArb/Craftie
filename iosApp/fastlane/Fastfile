default_platform(:ios)

TEAM_NAME = ENV["TEAM_NAME"]
FIREBASE_APP_ID = ENV["FIREBASE_APP_ID_IOS"]
FIREBASE_TESTER_GROUP = ENV["FIREBASE_TESTER_GROUP"]
APPLE_ID = ENV["APPLE_ID"]
TEAM_NAME = ENV["TEAM_NAME_IOS"]
FASTLANE_KEY_ID = ENV["FASTLANE_KEY_ID"]
FASTLANE_ISSUER_ID = ENV["FASTLANE_ISSUER_ID"]
FASTLANE_AUTH_PRIVATE_KEY = ENV["FASTLANE_AUTH_PRIVATE_KEY"]
APP_IDENTIFIER = ENV["APP_IDENTIFIER_IOS"]
GIT_PERSONAL_TOKEN_BASE64 = ENV["GIT_PERSONAL_TOKEN_BASE64"]

before_all do |lane|
    if FastlaneCore::Helper.mac?
      xcode_select("/Applications/Xcode_13.4.1.app")
    end
  end

platform :ios do
    desc "Modify production flag"
    lane :modify_info_plist_dev do

    update_plist(
      plist_path: "iOSApp/Info.plist",
      block: proc do |plist|
        plist[:ENABLE_PRODUCTION] = false
      end
    )
    end
  end

platform :ios do
    desc "clean"
        lane :clean do
       clear_derived_data(derived_data_path: "./fastlane/builds/")
   end
  end

platform :ios do
  desc "Responsible setting up the JWT key to access App Store Connect"
      lane :generate_appstore_connect_api_key do |options|
        app_store_connect_api_key(
          key_id: ENV["FASTLANE_KEY_ID"],
          issuer_id: ENV["FASTLANE_ISSUER_ID"],
          key_content: ENV["FASTLANE_AUTH_PRIVATE_KEY"],
          in_house: false,
          is_key_content_base64: true
        )
  end
end

platform :ios do
     #1
     desc "Create dev ipa"
     #2
     lane :build_beta_dev do
     #4
     increment_build_number(xcodeproj: "iosApp.xcodeproj", build_number: "1.0.0")
     sigh(
      provisioning_name: "Craftie Development Builds",
      ignore_profiles_with_different_name: true,
      team_id: ENV["APPLE_TEAM_ID"],
      username: ENV["APPLE_ID"],
      api_key: generate_appstore_connect_api_key,
      app_identifier: "com.craftie.dev",
      readonly: true,
      skip_certificate_verification: true,
      adhoc: true,
     )
     update_code_signing_settings(
       use_automatic_signing: true,
       team_id: ENV["APPLE_TEAM_ID"],
       bundle_identifier: "com.craftie.dev",
       profile_name: "Craftie Development Builds"
     )
     #6
     gym(
     clean: true,
     output_directory: "./fastlane/builds",
     skip_profile_detection: true,
     scheme: "iosApp",
     configuration: "Release",
     export_method: "ad-hoc",
     codesigning_identity: "Apple Distribution: Ian Arbuckle (56J2MD9T9K)",
     export_options: {
        compileBitcode: false,
        provisioningProfiles: {
            "com.craftie.dev" => "Craftie Development Builds"
        },
        signingStyle: "manual"
     }
     )
  end
 end

 platform :ios do
     #1
     desc "Upload dev to Firebase"
     #2
     lane :upload_firebase_dev do
     #3
     firebase_app_distribution(
     #4
     ipa_path: "./fastlane/builds/iOSApp.ipa",
     #5
     app: ENV["FIREBASE_APP_ID_IOS"],
     #6
     groups: ENV["FIREBASE_TESTER_GROUP"],
     #7
     release_notes: "Dev build")
    end
 end

 platform :ios do
     desc "build and upload dev to firebase"
     lane :do_everything_dev do
         modify_info_plist_dev
         clean
         build_beta_dev
         upload_firebase_dev
    end
  end