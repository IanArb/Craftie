default_platform(:ios)

TEAM_NAME = ENV["TEAM_NAME"]
FIREBASE_APP_ID = ENV["FIREBASE_APP_ID_IOS"]
FIREBASE_TESTER_GROUP = ENV["FIREBASE_TESTER_GROUP"]
APPLE_ID = ENV["APPLE_ID"]
TEAM_NAME = ENV["TEAM_NAME_IOS"]
FASTLANE_KEY_ID = ENV["FASTLANE_AUTH_PRIVATE_KEY"]
FASTLANE_ISSUER_ID = ENV["FASTLANE_ISSUER_ID"]
FASTLANE_AUTH_PRIVATE_KEY = ENV["FASTLANE_AUTH_PRIVATE_KEY"]
APP_IDENTIFIER = ENV["APP_IDENTIFIER_IOS"]
GIT_PERSONAL_TOKEN_BASE64 = ENV["GIT_PERSONAL_TOKEN_BASE64"]

platform :ios do
    desc "Modify production flag"
    lane :modify_info_plist_dev do

    update_plist(
      plist_path: "iOSApp/Info.plist",
      block: proc do |plist|
        plist[:ENABLE_PRODUCTION] = false
      end
    )
    end
  end

platform :ios do
    desc "Apple Store API connect"
    lane :apple_connect do
        pilot(
        api_key_path: "fastlane/apple_connect.json",
        ipa: "/fastlane/builds/iOSApp.ipa"
        )
     end
  end

platform :ios do
    desc "Get provision files"
        lane :certificates do
            match(
            git_basic_authorization: "SWFuQXJiOmdocF9XRXRxR0NvcnJDQm9UWEcyVmJjUWNlUlBGb0dKUWIxZWk5Q0k=",
            api_key_path: "fastlane/apple_connect.json"
            )
        end
       end

platform :ios do
    desc "Fetch provision files"
        lane :provisioning do
            get_provisioning_profile(
              username: "#[APPLE_ID]",
              api_key_path: "fastlane/apple_connect.json",
              team_name: "Ian Arbuckle",
              app_identifier: "com.craftie.dev",
              adhoc: true,
              force: true,
              filename: "AdHoc_com.craftie.dev.mobileprovision"
            )
        end
    end

platform :ios do
    desc "clean"
        lane :clean do
       clear_derived_data(derived_data_path: "./fastlane/builds/")
   end
  end

platform :ios do
     #1
     desc "Create dev ipa"
     #2
     lane :build_beta_dev do
     #3
     enable_automatic_code_signing
     #4
     increment_build_number(
        build_number: "1.0.0"
     )
     #5
     gym(scheme: "DEV")
  end
 end

 platform :ios do
     #1
     desc "Upload dev to Firebase"
     #2
     lane :upload_firebase_dev do
     #3
     firebase_app_distribution(
     #4
     ipa_path: "./fastlane/builds/iOSApp.ipa",
     #5
     app: "#[FIREBASE_APP_ID_IOS]",
     #6
     groups: "#[FIREBASE_TESTER_GROUP]",
     #7
     release_notes: "Dev build")
    end
 end

 platform :ios do
     desc "build and upload dev to firebase"
     lane :do_everything_dev do
         modify_info_plist_dev
         certificates
         provisioning
         clean
         build_beta_dev
         apple_connect
         upload_firebase_dev
    end
  end